name: build_windows

on:
  push:


env:
  CORE_SOLUTION_FILE_PATH: luna.sln
  SCRIPTING_SOLUTION_FILE_PATH: lunaScripting.sln

jobs:
  setup:
    runs-on: windows-latest
    steps:
      - name: Cache Submodules
        uses: actions/cache@v3
        with:
          path: |
            luna/thirdParty
          key: ${{ runner.os }}-submodules-${{ github.sha }}
          
      - name: Checkout luna repo
        uses: actions/checkout@v3
        with:
          submodules: recursive
          
      - name: Prepare Vulkan SDK
        uses: humbletim/setup-vulkan-sdk@v1.2.0
        with:
          vulkan-query-version: 1.3.216.0
          vulkan-components: Vulkan-Headers, Vulkan-Loader, SPIRV-Cross
          vulkan-use-cache: true
     
  build:
   needs: setup
   runs-on: windows-latest
   strategy:
      matrix:
        build-configuration: [debug, release, distribution]
   steps:
      - name: Cache Submodules
        uses: actions/cache@v3
        with:
          path: |
            luna/thirdParty
          key: ${{ runner.os }}-submodules-${{ github.sha }}
      - name: Cache bin-int
        uses: actions/cache@v3
        with:
          path: |
            luna/thirdParty
            bin-int
          key: ${{ runner.os }}-bin-int-${{ github.sha }}
          
      - name: Checkout luna repo
        uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Set up MSBuild
        uses: microsoft/setup-msbuild@v1.1

      - name: Set up Python 
        uses: actions/setup-python@v4
        with:
          python-version: 'pypy3.9'
          
      - name: Prepare Vulkan SDK
        uses: humbletim/setup-vulkan-sdk@v1.2.0
        with:
          vulkan-query-version: 1.3.216.0
          vulkan-components: Vulkan-Headers, Vulkan-Loader, SPIRV-Cross
          vulkan-use-cache: true
          
      - name: Generate solution files and install Vulkan
        run: .\build.bat
      - name: Build Core Engine
        working-directory: ${{ env.GITHUB_WORKSPACE }}
        run: msbuild /m /p:Configuration=${{ matrix.build-configuration }} ${{ env.CORE_SOLUTION_FILE_PATH }}

      - name: Build Scripting Engine
        working-directory: ${{ env.GITHUB_WORKSPACE }}
        run: msbuild /m /p:Configuration=${{ matrix.build-configuration }} ${{ env.SCRIPTING_SOLUTION_FILE_PATH }}
