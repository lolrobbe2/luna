<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_annotated" xml:lang="en-US">
<title>Class List</title>
Here are the classes, structs, unions and interfaces with brief descriptions:<link linkend="_classluna_1_1application_1_1application">luna::application::application</link><link linkend="_classluna_1_1app_render_event">luna::appRenderEvent</link><link linkend="_classluna_1_1app_tick_event">luna::appTickEvent</link><link linkend="_classluna_1_1app_update_event">luna::appUpdateEvent</link><link linkend="_classluna_1_1renderer_1_1buffer_element">luna::renderer::bufferElement</link><link linkend="_classluna_1_1renderer_1_1buffer_layout">luna::renderer::bufferLayout</link><link linkend="_structluna_1_1vulkan_1_1command_pool_submit_info">luna::vulkan::commandPoolSubmitInfo</link>
<para>Struct with all the submit info. this is the same except VkCommandBuffer* -&gt;virtualCmdBuffer*. for more information: <link xlink:href="https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkSubmitInfo.html">https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkSubmitInfo.html</link> </para>
<link linkend="_structluna_1_1utils_1_1compile_spec">luna::utils::compileSpec</link><link linkend="_classluna_1_1renderer_1_1device">luna::renderer::device</link>
<para>Device class is the code representation of the physical device or GPU </para>
<link linkend="_structluna_1_1vulkan_1_1vulkan_device_1_1device_handles">luna::vulkan::vulkanDevice::deviceHandles</link><link linkend="_structluna_1_1vulkan_1_1vulkan_pipeline_1_1draw_command">luna::vulkan::vulkanPipeline::drawCommand</link><link linkend="_classluna_1_1_event">luna::Event</link><link linkend="_classluna_1_1event_dispatcher">luna::eventDispatcher</link><link linkend="_classluna_1_1renderer_1_1index_buffer">luna::renderer::indexBuffer</link><link linkend="_classluna_1_1key_event">luna::keyEvent</link><link linkend="_classluna_1_1key_pressed_event">luna::keyPressedEvent</link><link linkend="_classluna_1_1key_released_event">luna::keyReleasedEvent</link><link linkend="_classluna_1_1key_typed_event">luna::keyTypedEvent</link><link linkend="_classluna_1_1_log">luna::Log</link><link linkend="_structluna_1_1renderer_1_1renderer_1_1mesh">luna::renderer::renderer::mesh</link><link linkend="_classluna_1_1mouse_button_event">luna::mouseButtonEvent</link><link linkend="_classluna_1_1mouse_button_pressed_event">luna::mouseButtonPressedEvent</link><link linkend="_classluna_1_1mouse_button_released_event">luna::mouseButtonReleasedEvent</link><link linkend="_classluna_1_1mouse_moved_event">luna::mouseMovedEvent</link><link linkend="_classluna_1_1mouse_scrolled_event">luna::mouseScrolledEvent</link><link linkend="_classluna_1_1utils_1_1object_storage">luna::utils::objectStorage&lt; value &gt;</link>
<para>Cached object memory class with a key handle </para>
<link linkend="_classluna_1_1renderer_1_1pipeline">luna::renderer::pipeline</link><link linkend="_structluna_1_1renderer_1_1pipeline_layout">luna::renderer::pipelineLayout</link><link linkend="_structluna_1_1vulkan_1_1queue_family_indices">luna::vulkan::queueFamilyIndices</link><link linkend="_classluna_1_1renderer_1_1renderer">luna::renderer::renderer</link><link linkend="_classsandbox">sandbox</link><link linkend="_classluna_1_1renderer_1_1shader">luna::renderer::shader</link><link linkend="_classluna_1_1utils_1_1shader_compiler">luna::utils::shaderCompiler</link><link linkend="_classluna_1_1utils_1_1shader_library">luna::utils::shaderLibrary</link><link linkend="_structluna_1_1renderer_1_1shader_resource">luna::renderer::shaderResource</link><link linkend="_structluna_1_1vulkan_1_1vulkan_pipeline_1_1shader_stage">luna::vulkan::vulkanPipeline::shaderStage</link><link linkend="_classstd_1_1shared__ptr_3_01window_01_4">shared_ptr&lt; window &gt;</link>
<para>This is the window class en creates an os window windowSpec)); </para>
<link linkend="_structluna_1_1vulkan_1_1swapchain_spec">luna::vulkan::swapchainSpec</link><link linkend="_classluna_1_1uuid">luna::uuid</link>
<para>General purpose uuid class with a maximum number of 2^64 uuid&apos;s the uuid class does not check for duplicates! </para>
<link linkend="_classluna_1_1utils_1_1vector_cache">luna::utils::vectorCache&lt; value &gt;</link>
<para>Pretty optimal multithreaded vector cahce headeronly class </para>
<link linkend="_structluna_1_1renderer_1_1renderer_1_1vertex">luna::renderer::renderer::vertex</link><link linkend="_structluna_1_1vulkan_1_1vulkan_pipeline_1_1_vertex">luna::vulkan::vulkanPipeline::Vertex</link><link linkend="_classluna_1_1renderer_1_1vertex_array">luna::renderer::vertexArray</link><link linkend="_classluna_1_1renderer_1_1vertex_buffer">luna::renderer::vertexBuffer</link><link linkend="_structluna_1_1vulkan_1_1vulkan_pipeline_1_1vertex_input_description">luna::vulkan::vulkanPipeline::vertexInputDescription</link><link linkend="_structluna_1_1utils_1_1vulkan_allocator_1_1vma_allocation">luna::utils::vulkanAllocator::vmaAllocation</link><link linkend="_classluna_1_1utils_1_1vulkan_allocator">luna::utils::vulkanAllocator</link><link linkend="_classluna_1_1vulkan_1_1vulkan_cmd_pool">luna::vulkan::vulkanCmdPool</link>
<para>Abbstraction class around the vulkan commandbuffer and pool to introduce increased workflow safety and usability and to decrease bugs. all a VkCommandBuffer has been changed out by virtualCmdBuffer type </para>
<link linkend="_structluna_1_1vulkan_1_1vulkan_cmd_pool_spec">luna::vulkan::vulkanCmdPoolSpec</link><link linkend="_classluna_1_1vulkan_1_1vulkan_device">luna::vulkan::vulkanDevice</link><link linkend="_classluna_1_1vulkan_1_1vulkan_feature_support">luna::vulkan::vulkanFeatureSupport</link><link linkend="_classluna_1_1gui_1_1vulkan_imgui">luna::gui::vulkanImgui</link><link linkend="_classluna_1_1vulkan_1_1vulkan_index_buffer">luna::vulkan::vulkanIndexBuffer</link><link linkend="_classluna_1_1utils_1_1vulkan_object_factory">luna::utils::vulkanObjectFactory</link>
<para>Static class that creates vulkan objects like buffers and images </para>
<link linkend="_classluna_1_1vulkan_1_1vulkan_pipeline">luna::vulkan::vulkanPipeline</link>
<para>Vulkan pipline implementation class </para>
<link linkend="_classluna_1_1vulkan_1_1vulkan_shader">luna::vulkan::vulkanShader</link><link linkend="_classluna_1_1vulkan_1_1vulkan_swapchain">luna::vulkan::vulkanSwapchain</link>
<para>VulkanSwapchain is a collection of vulkan frambuffers and image views to wich the scene will be </para>
<link linkend="_classluna_1_1vulkan_1_1vulkan_vertex_array">luna::vulkan::vulkanVertexArray</link><link linkend="_classluna_1_1vulkan_1_1vulkan_vertex_buffer">luna::vulkan::vulkanVertexBuffer</link><link linkend="_classluna_1_1vulkan_1_1window">luna::vulkan::window</link><link linkend="_classluna_1_1window_close_event">luna::windowCloseEvent</link><link linkend="_structluna_1_1vulkan_1_1windows_window_1_1window_data">luna::vulkan::windowsWindow::windowData</link><link linkend="_classluna_1_1window_resize_event">luna::windowResizeEvent</link><link linkend="_structluna_1_1vulkan_1_1window_spec">luna::vulkan::windowSpec</link><link linkend="_classluna_1_1vulkan_1_1windows_window">luna::vulkan::windowsWindow</link></section>
